{"ast":null,"code":"var _jsxFileName = \"/Users/tomo/capstone/twips-frontend/my-app/src/components/header.tsx\";\nimport * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          className: classes.menuButton,\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          onClick: toggleDrawer(true),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Twips\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      classes: {\n        paper: classes.drawer\n      },\n      open: isOpen,\n      onClose: toggleDrawer(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fullList,\n        role: \"presentation\",\n        onClick: toggleDrawer(false),\n        onKeyDown: toggleDrawer(false),\n        children: /*#__PURE__*/_jsxDEV(MenuList, {\n          children: Routes.map((prop, key) => {\n            return /*#__PURE__*/_jsxDEV(NavLink, {\n              to: prop.path,\n              style: {\n                textDecoration: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                selected: activeRoute(prop.path),\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: prop.sidebarName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 37\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/tomo/capstone/twips-frontend/my-app/src/components/header.tsx"],"names":["React","AppBar","Toolbar","IconButton","Typography","MenuIcon","Header","classes","menuButton","toggleDrawer","flexGrow","paper","drawer","isOpen","fullList","Routes","map","prop","key","path","textDecoration","activeRoute","sidebarName"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AACjB,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA,6BACI,QAAC,OAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAyB,UAAA,SAAS,EAAEC,OAAO,CAACC,UAA5C;AAAwD,UAAA,KAAK,EAAC,SAA9D;AAAwE,wBAAW,MAAnF;AAA0F,UAAA,OAAO,EAAEC,YAAY,CAAC,IAAD,CAA/G;AAAA,iCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,KAAnC;AAAyC,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAEJ,OAAO,CAACK;AAAjB,OAAjB;AAA4C,MAAA,IAAI,EAAEC,MAAlD;AAA0D,MAAA,OAAO,EAAEJ,YAAY,CAAC,KAAD,CAA/E;AAAA,6BACI;AACI,QAAA,SAAS,EAAEF,OAAO,CAACO,QADvB;AAEI,QAAA,IAAI,EAAC,cAFT;AAGI,QAAA,OAAO,EAAEL,YAAY,CAAC,KAAD,CAHzB;AAII,QAAA,SAAS,EAAEA,YAAY,CAAC,KAAD,CAJ3B;AAAA,+BAMI,QAAC,QAAD;AAAA,oBACKM,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AACvB,gCACI,QAAC,OAAD;AAAS,cAAA,EAAE,EAAED,IAAI,CAACE,IAAlB;AAAwB,cAAA,KAAK,EAAE;AAAEC,gBAAAA,cAAc,EAAE;AAAlB,eAA/B;AAAA,qCACI,QAAC,QAAD;AAAU,gBAAA,QAAQ,EAAEC,WAAW,CAACJ,IAAI,CAACE,IAAN,CAA/B;AAAA,uCACI,QAAC,YAAD;AAAc,kBAAA,OAAO,EAAEF,IAAI,CAACK;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,eAAgEJ,GAAhE;AAAA;AAAA;AAAA;AAAA,oBADJ;AAOH,WARA;AADL;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAnCD;;KAAMZ,M;AAoCN,eAAeA,MAAf","sourcesContent":["import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Button from '@mui/material/Button';\n\nconst Header = () => {\n    return (\n        <div>\n            <AppBar>\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                        Twips\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer classes={{ paper: classes.drawer }} open={isOpen} onClose={toggleDrawer(false)}>\n                <div\n                    className={classes.fullList}\n                    role=\"presentation\"\n                    onClick={toggleDrawer(false)}\n                    onKeyDown={toggleDrawer(false)}\n                >\n                    <MenuList>\n                        {Routes.map((prop, key) => {\n                            return (\n                                <NavLink to={prop.path} style={{ textDecoration: 'none' }} key={key}>\n                                    <MenuItem selected={activeRoute(prop.path)}>\n                                        <ListItemText primary={prop.sidebarName} />\n                                    </MenuItem>\n                                </NavLink>\n                            );\n                        })}\n                    </MenuList>\n                </div>\n            </Drawer>\n        </div>\n    )\n}\nexport default Header;"]},"metadata":{},"sourceType":"module"}